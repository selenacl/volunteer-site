{"ast":null,"code":"var _jsxFileName = \"/Users/selena/Desktop/react-apps/volunteer-site/client/src/components/Common/LoginModal/LoginForm.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport { loginUser } from '../../../actions/authActions';\nimport './LoginModal.css';\n\nclass LoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const loginUser = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      console.log(loginUser);\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push('/home/registeredEvents');\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const errors = this.state.errors;\n    return React.createElement(\"div\", {\n      className: \"row loginModalLoginForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form loginModalLoginForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      class: \"form-control\",\n      className: classnames('loginTextBox', {\n        'invalid': errors.email\n      }),\n      id: \"loginEmail\",\n      \"aria-describedby\": \"enterEmail\",\n      placeholder: \"Your Email\",\n      name: \"email\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), errors.email && React.createElement(\"div\", {\n      className: \"invalid-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, errors.email)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      class: \"form-control\",\n      className: classnames('loginTextBox', {\n        'invalid': errors.password\n      }),\n      id: \"loginPassword\",\n      placeholder: \"Password\",\n      name: \"password\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), errors.password && React.createElement(\"div\", {\n      className: \"invalid-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, errors.password)), React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"btn btn-primary\",\n      id: \"loginSubmitBtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"LOGIN\"))));\n  }\n\n}\n\nLoginForm.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(LoginForm);","map":{"version":3,"sources":["/Users/selena/Desktop/react-apps/volunteer-site/client/src/components/Common/LoginModal/LoginForm.js"],"names":["React","PropTypes","connect","classnames","loginUser","LoginForm","Component","state","email","password","onChange","e","setState","target","name","value","onSubmit","preventDefault","console","log","componentWillReceiveProps","nextProps","auth","isAuthenticated","props","history","push","errors","render","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport { loginUser } from '../../../actions/authActions';\n\nimport './LoginModal.css';\n\nclass LoginForm extends React.Component {\n    state = {\n        email: '',\n        password: ''\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.auth.isAuthenticated) {\n            this.props.history.push('/home/registeredEvents');\n        }\n        if(nextProps.errors) {\n            this.setState({errors: nextProps.errors});\n        }\n    }\n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        const loginUser = {\n            email: this.state.email,\n            password: this.state.password\n        }\n\n        console.log(loginUser);\n    }\n\n    render () {\n        const { errors } = this.state;\n\n        return (\n            <div className=\"row loginModalLoginForm\">\n                <div className=\"form loginModalLoginForm\">\n                    <form onSubmit={this.onSubmit}>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"email\" \n                                class=\"form-control\" \n                                className={classnames('loginTextBox', {\n                                    'invalid': errors.email\n                                })}\n                                id=\"loginEmail\" \n                                aria-describedby=\"enterEmail\" \n                                placeholder=\"Your Email\"\n                                name=\"email\"\n                                onChange={this.onChange}>\n                            </input>\n                            {errors.email && (<div className=\"invalid-text\">{errors.email}</div>)}\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"password\" \n                                class=\"form-control\" \n                                className={classnames('loginTextBox', {\n                                    'invalid': errors.password\n                                })}\n                                id=\"loginPassword\" \n                                placeholder=\"Password\"\n                                name=\"password\"\n                                onChange={this.onChange}>\n                            </input>\n                            {errors.password && (<div className=\"invalid-text\">{errors.password}</div>)}\n                        </div>\n                        <button type=\"submit\" class=\"btn btn-primary\" id=\"loginSubmitBtn\">LOGIN</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nLoginForm.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps, { loginUser })(LoginForm);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/selena/Desktop/react-apps/volunteer-site/client/src/components/Common/LoginModal/SignUpForm.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport './LoginModal.css';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../../actions/authActions';\n\nclass SignUpForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      errors: {}\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const newUser = {\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        email: this.state.email,\n        password: this.state.password,\n        confirmPassword: this.state.confirmPassword\n      };\n      this.props.registerUser(newUser, this.props.history);\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const errors = this.state.errors;\n    return React.createElement(\"div\", {\n      className: \"row loginModalSignUpForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form loginModalSignUpForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      className: classnames('signUpTextBox', {\n        'invalid': errors.firstName\n      }),\n      \"aria-describedby\": \"enterFirstName\",\n      placeholder: \"First Name\",\n      value: this.state.firstName,\n      name: \"firstName\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), errors.firstName && React.createElement(\"div\", {\n      className: \"invalid-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, errors.firstName)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      className: classnames('signUpTextBox', {\n        'invalid': errors.lastName\n      }),\n      \"aria-describedby\": \"enterLastName\",\n      placeholder: \"Last Name\",\n      value: this.state.lastName,\n      name: \"lastName\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), errors.lastName && React.createElement(\"div\", {\n      className: \"invalid-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, errors.lastName)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      class: \"form-control\",\n      className: classnames('signUpTextBox', {\n        'invalid': errors.email\n      }),\n      \"aria-describedby\": \"enterEmail\",\n      placeholder: \"Your Email\",\n      value: this.state.email,\n      name: \"email\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), errors.email && React.createElement(\"div\", {\n      className: \"invalid-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, errors.email)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      class: \"form-control\",\n      className: classnames('signUpTextBox', {\n        'invalid': errors.password\n      }),\n      placeholder: \"Password\",\n      value: this.state.password,\n      name: \"password\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), errors.password && React.createElement(\"div\", {\n      className: \"invalid-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, errors.password)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      class: \"form-control\",\n      className: classnames('signUpTextBox', {\n        'invalid': errors.confirmPassword\n      }),\n      placeholder: \"Confirm Password\",\n      value: this.state.confirmPassword,\n      name: \"confirmPassword\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), errors.confirmPassword && React.createElement(\"div\", {\n      className: \"invalid-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, errors.confirmPassword)), errors === {} ? null : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Congrats, you're signed up! Please login.\"), React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"btn btn-primary\",\n      id: \"signUpSubmitBtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"SIGN UP\"))));\n  }\n\n}\n\nSignUpForm.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  registerUser\n})(withRouter(SignUpForm));","map":{"version":3,"sources":["/Users/selena/Desktop/react-apps/volunteer-site/client/src/components/Common/LoginModal/SignUpForm.js"],"names":["React","PropTypes","withRouter","classnames","connect","registerUser","SignUpForm","Component","state","firstName","lastName","email","password","confirmPassword","errors","onChange","e","setState","target","name","value","onSubmit","preventDefault","newUser","props","history","componentWillReceiveProps","nextProps","render","propTypes","func","isRequired","auth","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport './LoginModal.css';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../../actions/authActions';\n\nclass SignUpForm extends React.Component {\n\n    state = {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n        errors: {}\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.errors) {\n            this.setState({errors: nextProps.errors});\n        }\n    }\n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        const newUser = {\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            email: this.state.email,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword\n        }\n\n        this.props.registerUser(newUser, this.props.history);\n    }\n\n    render () {\n        const { errors } = this.state;\n\n        return (\n            <div className=\"row loginModalSignUpForm\">\n                <div className=\"form loginModalSignUpForm\">\n                    <form onSubmit={this.onSubmit} noValidate>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\" \n                                class=\"form-control\" \n                                className={classnames('signUpTextBox', {\n                                    'invalid': errors.firstName\n                                })}\n                                aria-describedby=\"enterFirstName\" \n                                placeholder=\"First Name\"\n                                value={this.state.firstName}\n                                name=\"firstName\"\n                                onChange={this.onChange}>\n                            </input>\n                            {errors.firstName && (<div className=\"invalid-text\">{errors.firstName}</div>)}\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\" \n                                class=\"form-control\" \n                                className={classnames('signUpTextBox', {\n                                    'invalid': errors.lastName\n                                })}\n                                aria-describedby=\"enterLastName\" \n                                placeholder=\"Last Name\"\n                                value={this.state.lastName}\n                                name=\"lastName\"\n                                onChange={this.onChange}>\n                            </input>\n                            {errors.lastName && (<div className=\"invalid-text\">{errors.lastName}</div>)}\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"email\" \n                                class=\"form-control\" \n                                className={classnames('signUpTextBox', {\n                                    'invalid': errors.email\n                                })}\n                                aria-describedby=\"enterEmail\" \n                                placeholder=\"Your Email\"\n                                value={this.state.email}\n                                name=\"email\"\n                                onChange={this.onChange}>\n                            </input>\n                            {errors.email && (<div className=\"invalid-text\">{errors.email}</div>)}\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"password\" \n                                class=\"form-control\" \n                                className={classnames('signUpTextBox', {\n                                    'invalid': errors.password\n                                })}\n                                placeholder=\"Password\"\n                                value={this.state.password}\n                                name=\"password\"\n                                onChange={this.onChange}>\n                            </input>\n                            {errors.password && (<div className=\"invalid-text\">{errors.password}</div>)}\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"password\" \n                                class=\"form-control\" \n                                className={classnames('signUpTextBox', {\n                                    'invalid': errors.confirmPassword\n                                })}\n                                placeholder=\"Confirm Password\"\n                                value={this.state.confirmPassword}\n                                name=\"confirmPassword\"\n                                onChange={this.onChange}>\n                            </input>\n                            {errors.confirmPassword && (<div className=\"invalid-text\">{errors.confirmPassword}</div>)}\n                        </div>\n                        {errors === {} ? null : <p>Congrats, you're signed up! Please login.</p>}\n                        <button type=\"submit\" class=\"btn btn-primary\" id=\"signUpSubmitBtn\">SIGN UP</button>\n                    </form>\n                </div>\n                \n            </div>\n        );\n    }\n}\n\nSignUpForm.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps, { registerUser })(withRouter(SignUpForm));\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport { GET_ERRORS, SET_CURRENT_USER } from './types'; // Register User\n\nexport const registerUser = (userData, history) => dispatch => {\n  axios.post('/api/users/register', userData).then(res => history.push('/home/registeredEvents')).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Login User - Get User Token\n\nexport const loginUser = userData => dispatch => {\n  axios.post('/api/users/login', userData).then(res => {\n    const token = res.data.token;\n    localStorage.setItem('jwtToken', token);\n    setAuthToken(token);\n    const decoded = jwt_decode(token);\n    dispatch(setCurrentUser(decoded));\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Set logged in user\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n}; // Log user out\n\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem('jwtToken');\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n  history.push('/');\n};","map":{"version":3,"sources":["/Users/selena/Desktop/react-apps/volunteer-site/client/src/actions/authActions.js"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","registerUser","userData","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,SAA7C,C,CAEA;;AACA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuBC,QAAQ,IAAI;AAC3DR,EAAAA,KAAK,CAACS,IAAN,CAAW,qBAAX,EAAkCH,QAAlC,EACSI,IADT,CACcC,GAAG,IAAIJ,OAAO,CAACK,IAAR,CAAa,wBAAb,CADrB,EAESC,KAFT,CAEeC,GAAG,IACNN,QAAQ,CAAC;AACLO,IAAAA,IAAI,EAAEZ,UADD;AAELa,IAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFjB,GAAD,CAHpB;AAQH,CATM,C,CAWP;;AACA,OAAO,MAAMC,SAAS,GAAGb,QAAQ,IAAIE,QAAQ,IAAI;AAC7CR,EAAAA,KAAK,CAACS,IAAN,CAAW,kBAAX,EAA+BH,QAA/B,EACKI,IADL,CACUC,GAAG,IAAI;AAAA,UACDS,KADC,GACST,GAAG,CAACO,IADb,CACDE,KADC;AAETC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC;AACAnB,IAAAA,YAAY,CAACmB,KAAD,CAAZ;AACA,UAAMG,OAAO,GAAGrB,UAAU,CAACkB,KAAD,CAA1B;AACAZ,IAAAA,QAAQ,CAACgB,cAAc,CAACD,OAAD,CAAf,CAAR;AACH,GAPL,EAQKV,KARL,CAQWC,GAAG,IACNN,QAAQ,CAAC;AACLO,IAAAA,IAAI,EAAEZ,UADD;AAELa,IAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFjB,GAAD,CAThB;AAaH,CAdM,C,CAgBP;;AACA,OAAO,MAAMM,cAAc,GAAGD,OAAO,IAAI;AACrC,SAAO;AACHR,IAAAA,IAAI,EAAEX,gBADH;AAEHY,IAAAA,OAAO,EAAEO;AAFN,GAAP;AAIH,CALM,C,CAOP;;AACA,OAAO,MAAME,UAAU,GAAG,MAAMjB,QAAQ,IAAI;AACxCa,EAAAA,YAAY,CAACK,UAAb,CAAwB,UAAxB;AACAzB,EAAAA,YAAY,CAAC,KAAD,CAAZ;AACAO,EAAAA,QAAQ,CAACgB,cAAc,CAAC,EAAD,CAAf,CAAR;AACAjB,EAAAA,OAAO,CAACK,IAAR,CAAa,GAAb;AACH,CALM","sourcesContent":["import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\n\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n    axios.post('/api/users/register', userData)\n            .then(res => history.push('/home/registeredEvents'))\n            .catch(err =>\n                dispatch({\n                    type: GET_ERRORS,\n                    payload: err.response.data\n                })\n            );\n};\n\n// Login User - Get User Token\nexport const loginUser = userData => dispatch => {\n    axios.post('/api/users/login', userData)\n        .then(res => {\n            const { token } = res.data;\n            localStorage.setItem('jwtToken', token);\n            setAuthToken(token);\n            const decoded = jwt_decode(token);\n            dispatch(setCurrentUser(decoded));\n        })\n        .catch(err => \n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            }));\n}\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    }\n}\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n    localStorage.removeItem('jwtToken');\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n    history.push('/');\n}"]},"metadata":{},"sourceType":"module"}